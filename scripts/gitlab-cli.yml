variables:
  QEMU_DIRECTORY: "/qemu-ubu"
  t: echo $CI_COMMIT_TAG | cut -d'v' -f 2 | cut -d'5' -f 2 | cut -d'.' -f 2
  res: "$t -lt 9"

workflow:
  rules:
    - if: $CI_COMMIT_TAG =~ /v([1-9]\[0-9]+\.?[0-9]*|0?5\.(9|[1-9]+[0-9]+)|[0-9]*[6-9])\.?([0-9]+\.?)?/

stages:
    - test
    - build-badge-success
    - build-badge-failed

qemu-netty-test:
  stage: test
  script:
    - curl -s https://raw.githubusercontent.com/1Jo1/netty-transport_uring-ci-scripts/netty-kernel-testing/scripts/build-kernel-qemu.sh | bash -s $CI_COMMIT_TAG
    - ls -lah
    - pwd
    - ls -lah netty-incubator-transport-io_uring
    - ls -la netty-incubator-transport-io_uring/target
    - curl -s https://raw.githubusercontent.com/1Jo1/netty-transport_uring-ci-scripts/netty-kernel-testing/scripts/check_build_result.sh | bash -s netty-incubator-transport-io_uring/build.output
    #- curl -s https://raw.githubusercontent.com/1Jo1/netty-transport_uring-ci-scripts/netty-kernel-testing/scripts/build-kernel.sh | bash -s $CI_COMMIT_TAG
  artifacts:
    when: always
    paths:
      - netty-incubator-transport-io_uring/target/surefire-reports/TEST-*.xml
    reports:
      junit:
        - netty-incubator-transport-io_uring/target/surefire-reports/TEST-*.xml


badge-success:
  stage: build-badge-success
  when: on_success
  script:
    - pip install anybadge
    - anybadge -l pipeline -v "$CI_COMMIT_TAG passing" -f badge.svg -c green
  artifacts:
    paths:
       - badge.svg

badge-failed:
  statge: build-badge-failed
  when: on_failure
  script:
    - pip install anybadge
    - anybadge -l pipeline -v "$CI_COMMIT_TAG not passing" -f badge.svg --color=#FF0000
  artifacts:
    paths:
       - badge.svg
